<?xml version="1.0" encoding="UTF-8"?>
<bean:beans xmlns="http://www.springframework.org/schema/batch"
            xmlns:bean="http://www.springframework.org/schema/beans"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xmlns:p="http://www.springframework.org/schema/p"
            xmlns:tx="http://www.springframework.org/schema/tx"
            xmlns:batch="http://www.springframework.org/schema/batch"
            xmlns:aop="http://www.springframework.org/schema/aop"
            xmlns:context="http://www.springframework.org/schema/context"
            xmlns:task="http://www.springframework.org/schema/task"
            xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-2.5.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task.xsd
    http://www.springframework.org/schema/batch
    http://www.springframework.org/schema/batch/spring-batch.xsd">

    <bean:import resource="classpath:batch/ch03/conf/job-context.xml"/>

    <job id="firstBaseJob">

        <step id="firstBaseStep">
            <tasklet transaction-manager="transactionManager_ch03">
                <chunk
                       reader="firstReader"
                       writer="firstWriter"
                       processor="firstProcessor"
                       commit-interval="1"
                       skip-policy="alwaysSkipPolicy"
                        >
                    <!--<skippable-exception-classes>
                        <include class="java.lang.RuntimeException"/>
                        <exclude class="java.io.FileNotFoundException"/>
                    </skippable-exception-classes>-->
                    <listeners>
                        <listener ref="chunkListener"/>
                        <listener ref="skipListener"/>
                    </listeners>
                </chunk>
            </tasklet>
        </step>
    </job>

    <bean:bean id="chunkListener" class="com.wds.spring.batch.ch03.FirstChunkListener"/>
    <bean:bean id="skipListener" class="com.wds.spring.batch.ch03.FirstSkipListener" />
    <bean:bean id="alwaysSkipPolicy" class="org.springframework.batch.core.step.skip.AlwaysSkipItemSkipPolicy"/>


    <job id="billJob_ch03">
        <step id="billStep" next="firstDecision">
            <tasklet transaction-manager="transactionManager_ch03">
                <chunk reader="firstReader"  processor="firstProcessor" writer="firstWriter" commit-interval="2"/>
            </tasklet>
            <!--<next on="COMPLETED" to="firstStep"/>
            <next on="FAILED" to="printLogStep"/>-->
            <listeners>
                <listener ref="stepListener" />
                <listener ref="stepAnnotationListener"/>
            </listeners>
        </step>

        <decision id="firstDecision" decider="firstDecider">
            <next on="COMPLETED" to="firstStep"/>
            <next on="FAILED" to="printLogStep"/>
        </decision>
    <!--<listeners>
        <listener ref="sysoutListener"/>
        <listener ref="sysoutAnnotationListener"/>
    </listeners>
    <validator ref="dateKeyValidator"/>-->

        <step id="firstStep">
            <tasklet transaction-manager="transactionManager_ch03">
                <chunk reader="secondReader" writer="secondWriter" processor="secondProcessor" commit-interval="2">
                </chunk>
            </tasklet>
        </step>

        <step id="printLogStep">
            <tasklet ref="printLogTasklet" transaction-manager="transactionManager_ch03"/>
        </step>

        <!--<step id="cleanStep">
            <tasklet ref="cleanTasklet" transaction-manager="transactionManager_ch03" />
            <next on="*" to="printLogStep"/>
        </step>-->

    </job>

    <bean:bean id="firstDecider" class="com.wds.spring.batch.ch03.FirstDecision"/>


    <bean:bean id="secondReader" class="com.wds.spring.batch.ch03.second.SecondReader"/>
    <bean:bean id="secondProcessor" class="com.wds.spring.batch.ch03.second.SecondProcessor"/>
    <bean:bean id="secondWriter" class="com.wds.spring.batch.ch03.second.SecondWriter"/>

    <bean:bean id="firstReader" class="com.wds.spring.batch.ch03.first.FirstReader"/>
    <bean:bean id="firstProcessor" class="com.wds.spring.batch.ch03.first.FirstProcessor"/>
    <bean:bean id="firstWriter" class="com.wds.spring.batch.ch03.first.FirstWriter"/>

    <bean:bean id="cleanTasklet" scope="step"
               class="com.wds.spring.batch.ch03.next.CleanTasklet">
    </bean:bean>

    <bean:bean id="printLogTasklet" scope="step" class="com.wds.spring.batch.ch03.next.PrintLogTasklet"/>


    <!-- next step reader -->
    <bean:bean id="printLogReader" class="com.wds.spring.batch.ch03.next.PrintLogReader"/>
    <bean:bean id="printLogProcessor" class="com.wds.spring.batch.ch03.next.PrintLogProcessor"/>
    <bean:bean id="printLogWriter" class="com.wds.spring.batch.ch03.next.PrintLogWriter"/>


    <!-- Step Listener -->
    <bean:bean id="stepListener" class="com.wds.spring.batch.ch03.SystemOutStepListener" />
    <bean:bean id="stepAnnotationListener" class="com.wds.spring.batch.ch03.SystemOutStepAnnotationListener"/>

    <!--Job Listener-->
    <bean:bean id="sysoutAnnotationListener" class="com.wds.spring.batch.ch03.SystemOutAnnotationListener"/>
    <bean:bean id="sysoutListener" class="com.wds.spring.batch.ch03.SystemOutListener"/>

    <bean:bean id="dateKeyValidator" class="org.springframework.batch.core.job.DefaultJobParametersValidator">
        <bean:property name="requiredKeys">
            <bean:set>
                <bean:value>dateKey</bean:value>
            </bean:set>
        </bean:property>
    </bean:bean>

    <bean:bean id="csvItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <!--<bean:property name="resource" value="classpath:batch/ch03/data/credit-card-bill-201303.csv"/>-->
        <bean:property name="resource" value="#{jobParameters['inputResource']}"/>
        <bean:property name="lineMapper">
            <bean:bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <bean:property name="lineTokenizer" ref="lineTokenizer"/>
                <bean:property name="fieldSetMapper">
                    <bean:bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <bean:property name="prototypeBeanName" value="creditBill"/>
                    </bean:bean>
                </bean:property>
            </bean:bean>
        </bean:property>
    </bean:bean>

    <bean:bean id="lineTokenizer" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
        <bean:property name="delimiter" value=","/>
        <bean:property name="names">
            <bean:list>
                <bean:value>accountId</bean:value>
                <bean:value>name</bean:value>
                <bean:value>amount</bean:value>
                <bean:value>date</bean:value>
                <bean:value>address</bean:value>
            </bean:list>
        </bean:property>
    </bean:bean>

    <!-- csvItemProcessor -->
    <bean:bean id="creditBillProcessor" scope="step" class="com.wds.spring.batch.ch03.CreditBillProcessor"/>


    <!-- csvItemWriter -->
    <bean:bean id="csvItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
        <bean:property name="resource" value="file:batch/ch03/data/outputFile.csv" />
        <bean:property name="lineAggregator">
            <bean:bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
                <bean:property name="delimiter" value=","/>
                <bean:property name="fieldExtractor">
                    <bean:bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                        <bean:property name="names" value="accountID,name,amount,date,address"/>
                    </bean:bean>
                </bean:property>
            </bean:bean>
        </bean:property>
    </bean:bean>

    <bean:bean id="creditBill" scope="prototype"
               class="com.wds.spring.batch.ch03.CreditBill">
    </bean:bean>

    <!-- Flow Job -->
    <job id="flowJob" job-repository="jobRepository">

        <split id="firstSplie" task-executor="flowTaskExecutor" next="printFlowLogStep">

            <flow>
                <step id="firstFlowStep">
                    <tasklet transaction-manager="transactionManager_ch03">
                        <chunk reader="firstReader" writer="firstWriter" processor="firstProcessor" commit-interval="2"/>
                    </tasklet>
                </step>
            </flow>

            <flow>
                <step id="secondFlowStep">
                    <tasklet transaction-manager="transactionManager_ch03">
                        <chunk reader="secondReader" writer="secondWriter" processor="secondProcessor" commit-interval="1"/>
                    </tasklet>
                </step>
            </flow>

        </split>

        <step id="printFlowLogStep">
            <tasklet ref="printLogTasklet" transaction-manager="transactionManager_ch03"/>
        </step>

    </job>

    <bean:bean id="flowTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <bean:property name="corePoolSize" value="5"/>
        <bean:property name="maxPoolSize" value="10"/>
    </bean:bean>

    <flow id="externalFlow">
        <step id="externalFlow_firstFlowStep" next="externalFlow_secondFlowStep">
            <tasklet transaction-manager="transactionManager_ch03">
                <chunk reader="firstReader" writer="firstWriter" processor="firstProcessor" commit-interval="2"/>
            </tasklet>
        </step>
        <step id="externalFlow_secondFlowStep">
            <tasklet transaction-manager="transactionManager_ch03">
                <chunk reader="secondReader" writer="secondWriter" processor="secondProcessor" commit-interval="1"/>
            </tasklet>
        </step>
    </flow>

    <job id="externalJob" job-repository="jobRepository">
        <flow id="externalJob.flow1" parent="externalFlow" next="printExternalStep"/>
        <step id="printExternalStep">
            <tasklet ref="printLogTasklet" transaction-manager="transactionManager_ch03" />
        </step>
    </job>

</bean:beans>