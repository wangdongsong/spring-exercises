<?xml version="1.0" encoding="UTF-8"?>
<bean:beans xmlns="http://www.springframework.org/schema/batch"
            xmlns:bean="http://www.springframework.org/schema/beans"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xmlns:p="http://www.springframework.org/schema/p"
            xmlns:tx="http://www.springframework.org/schema/tx"
            xmlns:batch="http://www.springframework.org/schema/batch"
            xmlns:aop="http://www.springframework.org/schema/aop"
            xmlns:context="http://www.springframework.org/schema/context"
            xmlns:task="http://www.springframework.org/schema/task"
            xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-2.5.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task.xsd
    http://www.springframework.org/schema/batch
    http://www.springframework.org/schema/batch/spring-batch.xsd">

    <bean:import resource="classpath:batch/partition/conf/job-context.xml"/>

    <job id="filePartitionJob">
        <step id="filePartitionStep">
            <partition step="filePartitionReadWriteStep" partitioner="filePartitioner">
                <handler grid-size="2" task-executor="taskExecutor"/>
            </partition>
        </step>
    </job>

    <bean:bean id="filePartitioner" class="org.springframework.batch.core.partition.support.MultiResourcePartitioner">
        <bean:property name="keyName" value="fileName"/>
        <bean:property name="resources" value="classpath:batch/partition/data/*.csv"/>
    </bean:bean>

    <step id="filePartitionReadWriteStep">
        <tasklet transaction-manager="transactionManager_partition">
            <chunk reader="filePartitionCsvItemReader" writer="filePartitionJdbcItemWriter" processor="filePartitionItemProcessor" commit-interval="2"/>
        </tasklet>
    </step>

    <bean:bean id="filePartitionItemProcessor" class="com.wds.spring.batch.partition.CreditBillProcessor"/>
    <bean:alias name="filePartitionItemProcessor" alias="dbPartitionItemProcessor"/>

    <bean:bean id="filePartitionJdbcItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <bean:property name="dataSource" ref="dataSource"/>
        <bean:property name="sql" value="insert into t_dbdestcredit (ACCOUNTID,NAME,AMOUNT,DATE,ADDRESS) values (:accountID,:name,:amount,:date,:address)"/>
        <bean:property name="itemSqlParameterSourceProvider" >
            <bean:bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </bean:property>
    </bean:bean>
    <bean:alias name="filePartitionJdbcItemWriter" alias="dbPartitionJdbcWriter"/>

    <bean:bean id="filePartitionCsvItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <bean:property name="resource" value="#{stepExecutionContext['fileName']}"/>
        <bean:property name="lineMapper" ref="lineMapper">
            <!--<bean:bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <bean:property name="lineTokenizer" ref="lineTokenizer"/>
                <bean:property name="fieldSetMapper">
                    <bean:bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <bean:property name="prototypeBeanName" value="creditBill"/>
                    </bean:bean>
                </bean:property>
            </bean:bean>-->
        </bean:property>
    </bean:bean>

    <bean:bean id="lineMapper" class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
        <bean:property name="lineTokenizer" ref="lineTokenizer"/>
        <bean:property name="fieldSetMapper" ref="creditFieldSetMapper"/>
    </bean:bean>

    <bean:bean id="creditFieldSetMapper" class="com.wds.spring.batch.partition.CreditFieldSetMapper"/>

    <bean:bean id="lineTokenizer" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
        <bean:property name="delimiter" value=","/>
        <bean:property name="names">
            <bean:list>
                <bean:value>id</bean:value>
                <bean:value>accountID</bean:value>
                <bean:value>name</bean:value>
                <bean:value>amount</bean:value>
                <bean:value>date</bean:value>
                <bean:value>address</bean:value>
            </bean:list>
        </bean:property>
    </bean:bean>

    <!-- Db partition -->
    <job id="dbPartitionJob">
        <step id="dbPartitionStep">
            <partition step="dbPartitionReadWriteStep" partitioner="dbPartitioner">
                <handler grid-size="5" task-executor="taskExecutor"/>
            </partition>
        </step>
    </job>

    <step id="dbPartitionReadWriteStep">
        <tasklet transaction-manager="transactionManager_partition">
            <chunk reader="jdbcItemPageReader" writer="dbPartitionJdbcWriter" processor="dbPartitionItemProcessor" commit-interval="5"/>
            <listeners>
                <listener ref="dbPartitionStepExecutionListener"></listener>
            </listeners>
        </tasklet>
    </step>

    <bean:bean id="dbPartitionStepExecutionListener" class="com.wds.spring.batch.partition.PartitionStepExecutionListener"/>

    <bean:bean id="dbPartitioner" class="com.wds.spring.batch.partition.DbPartitioner">
        <bean:property name="dataSource" ref="dataSource"/>
        <bean:property name="table" value="t_credit"/>
        <bean:property name="column" value="ID"/>
        <bean:property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean:bean>

    <bean:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <bean:property name="dataSource" ref="dataSource"/>
    </bean:bean>

    <bean:bean id="jdbcItemPageReader" scope="step" class="org.springframework.batch.item.database.JdbcPagingItemReader">
        <bean:property name="dataSource" ref="dataSource"/>
        <bean:property name="queryProvider" ref="refQueryProvider"/>
        <bean:property name="pageSize" value="2"/>
        <bean:property name="rowMapper" ref="dbCreditRowMapper"/>
    </bean:bean>

    <bean:bean id="dbCreditRowMapper" scope="step" class="com.wds.spring.batch.partition.CreditBillRowMapper"/>

    <bean:bean id="refQueryProvider" scope="step" class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean">
        <bean:property name="dataSource" ref="dataSource"/>
        <bean:property name="selectClause" value="select id, accountid, name, amount, date, address"/>
        <bean:property name="fromClause" value="from t_dbcredit"/>
        <bean:property name="whereClause" value="where id between #{stepExecutionContext['minRecord']} and #{stepExecutionContext['maxRecord']}"/>
        <bean:property name="sortKey" value="id"/>
    </bean:bean>

</bean:beans>